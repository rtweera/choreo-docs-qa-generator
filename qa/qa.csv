question,answer
How can I configure a custom error page for my web application in Choreo?,"To configure a custom error page for your web application in Choreo, you need to set the error path in the managed authentication configuration during the deployment of your web application. Here are the steps to accomplish this:\n\n1. **Navigate to Your Web Application**: In the Choreo Console, find the web application for which you want to set the custom error page.\n\n2. **Deploy Configuration**: Click on the **Deploy** option in the left navigation menu.\n\n3. **Set Up Managed Authentication**:\n   - In the **Set Up** card, click on **Configure & Deploy**.\n   - Ensure that the toggle for **Managed Authentication with Choreo** is enabled.\n\n4. **Configure the Error Path**:\n   - Locate the **Error Path** field in the configuration settings. This field specifies the relative path to which Choreo will redirect users when an error occurs during sign-in or sign-out processes.\n   - Input the path to your custom error page in this field. If you do not configure an error path, Choreo will use its default error page.\n\n5. **Complete Deployment**: After setting the necessary paths, continue with the deployment process to apply the changes.\n\nWhen an error occurs, Choreo will redirect users to your specified custom error page and will include the following query parameters in the URL:\n- **code**: A short textual error code indicating the error.\n- **message**: A description of the error.\n\nThis setup allows you to provide a more user-friendly error experience tailored to your application's needs.\n\nFor more detailed instructions, you can refer to the documentation [here](https://wso2.com/choreo/docs/authentication-and-authorization/secure-web-applications-with-managed-authentication/#step-2-enable-managed-authentication-and-configure-the-paths)."
How can I view the audit logs for my organization in Choreo?,"To view audit logs for your organization in Choreo, follow these steps:\n\n1. In the Choreo Console, go to the top navigation menu and click on **Organization**.\n2. In the left navigation menu, click on **DevOps**, then select **Audit Logs**. This will display the audit logs for the past 30 days by default.\n3. You can apply filter criteria to view audit logs based on a specific time range and other requirements.\n\n### Note:\n- As of now, only organization administrators can view audit logs by default. If other members need access, the administrator must create a role with the relevant permissions and assign it to those members.\n- Choreo retains audit logs for one year and archives them for an additional year, making the total retention period two years.\n\nFor further details on managing access to audit logs, you can refer to the section on [Manage audit log access](https://wso2.com/choreo/docs/monitoring-and-insights/view-logs/#manage-audit-log-access).\n\nYou can find more comprehensive information in the documentation: [View Logs - Audit logs](https://wso2.com/choreo/docs/monitoring-and-insights/view-logs/#audit-logs)."
How do I configure a liveness probe for my service component in Choreo?,"To configure a liveness probe for your service component in Choreo, follow these steps:\n\n1. In the **Component Listing** pane, click on the component for which you want to configure the liveness probe.\n2. In the left navigation menu, click on **DevOps** and then select **Health Checks**.\n3. On the **Health Checks** page, click on **+ Create** to add a new probe.\n4. Configure the liveness probe according to your requirements. You can choose from different types of probes:\n   - **HTTP GET Request**: This probe sends an HTTP GET request to a specified port and path on the container. A response status code in the range of 200-399 indicates success. It’s recommended to create a `/healthz` or `/health` endpoint in your service for this purpose.\n   - **TCP Connection Probe**: This probe attempts to open a socket on the specified port. If it cannot establish a connection, the probe fails.\n   - **Execute a Command**: This probe runs a given script inside the container. A non-zero return code indicates a failure (e.g., `[""cat"", ""/tmp/healthy""]` is healthy if the file exists).\n5. Once configured, click **Save** to apply the liveness probe settings.\n\nLiveness probes help your container to self-heal by restarting it if the probe fails, which is essential in scenarios where the application may crash or become unresponsive.\n\nFor more detailed information, you can refer to the documentation [here](https://wso2.com/choreo/docs/devops-and-ci-cd/set-up-health-checks/#configure-liveness-and-readiness-probes)."
How can I integrate my existing CI/CD pipeline with Choreo to automatically deploy new container images?,"To integrate your existing CI/CD pipeline with Choreo for automatically deploying new container images, follow these steps:\n\n1. **Build and Push the Container Image**: Ensure you build and push the container image associated with your Choreo component to your container registry.\n\n2. **Access the DevOps Section**: In the Choreo console, navigate to the **DevOps** section and click on **External CI**.\n\n3. **Generate a Token**: From the **Manage Tokens** section, generate a token specifically for your CI pipeline. It is recommended to store this token securely (e.g., as a GitHub secret if you're using GitHub Actions) since it is bound to a specific component.\n\n4. **Trigger Automatic Deployment**: To initiate an automatic deployment of the new image, send an HTTP POST request to the Choreo webhook endpoint with the updated image details. You may also use the provided Webhook snippets to facilitate this process.\n\n### Important Notes:\n- Choreo does not automatically detect and deploy newly added images or tags in the linked container registry; hence you need to initiate deployments manually through your CI pipeline.\n- Ensure your CI pipeline is set up to trigger the webhook whenever a new image is pushed to the container registry.\n\nThis integration allows you to maintain your existing CI setup while leveraging Choreo for deployment. For more detailed information, you can refer to the documentation: [Auto-deploy images in Choreo with an external CI/build pipeline](https://wso2.com/choreo/docs/develop-components/bring-your-own-image/#auto-deploy-images-in-choreo-with-an-external-cibuild-pipeline)."
What are the steps to register a third-party service that requires OAuth 2.0 authentication in Choreo?,"To register a third-party service with OAuth 2.0 authentication in Choreo, you need to follow several steps that involve creating an application, configuring an identity provider, and linking your application to the Choreo component. Here’s a comprehensive outline of the process:\n\n### Steps to Register a Third-Party Service with OAuth 2.0\n\n1. **Create an Application in Choreo:**\n   - In the Choreo Console, navigate to the component for which you want to manage OAuth keys.\n   - Click on **Settings** in the left navigation menu.\n   - Access the **Authentication Keys** tab and select the environment for which you want to generate keys.\n\n2. **Configure Your Identity Provider:**\n   - You can choose between Choreo's built-in identity provider (Asgardeo) or an external identity provider that supports OIDC/OAuth 2.0.\n   \n   **For Choreo Built-In Identity Provider:**\n   - In the **Identity Provider** list, select **Choreo Built-In Identity Provider**.\n   - Click **Generate Secret** to create the authentication keys.\n\n   **For Asgardeo:**\n   - Sign in to the [Asgardeo Console](https://console.asgardeo.io/).\n   - Create a new application by selecting **+ New Application** and then **Standard-Based Application**.\n   - Choose **OAuth2.0 OpenID Connect** as the protocol and register the application.\n   - Configure the application with the following settings:\n     - Allowed grant types: `Code` and `Refresh Token`\n     - Authorized redirect URLs: \n       - `[your-web-application-url]/auth/login/callback`\n       - `[your-web-application-url]/auth/logout/callback`\n     - Access Token Type: `JWT`\n   - Copy the **Client ID** and **Client Secret** for later use.\n\n   **For an External Identity Provider:**\n   - Create an OIDC/OAuth2.0 application in your external identity provider.\n   - Set the allowed grant types to `Code` and `Refresh Token`.\n   - Specify the authorized redirect URL and set the access token type to JWT.\n\n3. **Link the OIDC/OAuth2.0 Application to Choreo:**\n   - Return to the Choreo Console.\n   - In the **Authentication Keys** tab, select your identity provider from the list.\n   - Paste the **Client ID** and **Client Secret** from the application you created in Asgardeo or your external identity provider.\n   - Click **Add Keys** to complete the linking process.\n\n### Final Notes\nMake sure that your identity provider is properly configured to contain users relevant to your web application. If you intend to invoke APIs secured with role-based access control, ensure that roles are created and permissions are assigned appropriately.\n\nFor detailed steps and further configurations, you can refer to the documentation:\n- [Consume an OAuth2 Secured Service](https://wso2.com/choreo/docs/consuming-services/consuming-a-sevice-oauth2/#create-an-application)\n- [Secure Web Applications with Managed Authentication](https://wso2.com/choreo/docs/authentication-and-authorization/secure-web-applications-with-managed-authentication/#step-3-configure-the-identity-provider-for-the-web-application)"
